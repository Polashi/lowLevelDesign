Index: ecommerce/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ecommerce/README.md b/ecommerce/README.md
new file mode 100644
--- /dev/null	(date 1739384567473)
+++ b/ecommerce/README.md	(date 1739384567473)
@@ -0,0 +1,1 @@
+# lowLevelDesign
\ No newline at end of file
Index: ecommerce/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ecommerce/pom.xml b/ecommerce/pom.xml
new file mode 100644
--- /dev/null	(date 1739384786661)
+++ b/ecommerce/pom.xml	(date 1739384786661)
@@ -0,0 +1,99 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
+	<modelVersion>4.0.0</modelVersion>
+	<parent>
+		<groupId>org.springframework.boot</groupId>
+		<artifactId>spring-boot-starter-parent</artifactId>
+		<version>3.4.2</version>
+		<relativePath/> <!-- lookup parent from repository -->
+	</parent>
+	<groupId>org.example</groupId>
+	<artifactId>ecommerce</artifactId>
+	<version>0.0.1-SNAPSHOT</version>
+	<name>ecommerce</name>
+	<description>ecommerce</description>
+	<url/>
+	<licenses>
+		<license/>
+	</licenses>
+	<developers>
+		<developer/>
+	</developers>
+	<scm>
+		<connection/>
+		<developerConnection/>
+		<tag/>
+		<url/>
+	</scm>
+	<properties>
+		<java.version>17</java.version>
+	</properties>
+	<dependencies>
+		<dependency>
+			<groupId>org.springframework.boot</groupId>
+			<artifactId>spring-boot-starter-data-jpa</artifactId>
+		</dependency>
+
+		<dependency>
+			<groupId>org.springframework.boot</groupId>
+			<artifactId>spring-boot-devtools</artifactId>
+			<scope>runtime</scope>
+			<optional>true</optional>
+		</dependency>
+		<dependency>
+			<groupId>com.mysql</groupId>
+			<artifactId>mysql-connector-j</artifactId>
+			<scope>runtime</scope>
+		</dependency>
+		<dependency>
+			<groupId>org.springframework.boot</groupId>
+			<artifactId>spring-boot-configuration-processor</artifactId>
+			<optional>true</optional>
+		</dependency>
+		<dependency>
+			<groupId>org.projectlombok</groupId>
+			<artifactId>lombok</artifactId>
+			<optional>true</optional>
+		</dependency>
+		<dependency>
+			<groupId>org.springframework.boot</groupId>
+			<artifactId>spring-boot-starter-test</artifactId>
+			<scope>test</scope>
+		</dependency>
+	</dependencies>
+
+	<build>
+		<plugins>
+			<plugin>
+				<groupId>org.apache.maven.plugins</groupId>
+				<artifactId>maven-compiler-plugin</artifactId>
+				<configuration>
+					<annotationProcessorPaths>
+						<path>
+							<groupId>org.springframework.boot</groupId>
+							<artifactId>spring-boot-configuration-processor</artifactId>
+						</path>
+						<path>
+							<groupId>org.projectlombok</groupId>
+							<artifactId>lombok</artifactId>
+						</path>
+					</annotationProcessorPaths>
+				</configuration>
+			</plugin>
+			<plugin>
+				<groupId>org.springframework.boot</groupId>
+				<artifactId>spring-boot-maven-plugin</artifactId>
+				<configuration>
+					<excludes>
+						<exclude>
+							<groupId>org.projectlombok</groupId>
+							<artifactId>lombok</artifactId>
+						</exclude>
+					</excludes>
+				</configuration>
+			</plugin>
+		</plugins>
+	</build>
+
+</project>
Index: ecommerce/jarRepositories.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ecommerce/jarRepositories.xml b/ecommerce/jarRepositories.xml
new file mode 100644
--- /dev/null	(date 1739284899282)
+++ b/ecommerce/jarRepositories.xml	(date 1739284899282)
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="RemoteRepositoriesConfiguration">
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Central Repository" />
+      <option name="url" value="https://repo.maven.apache.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Maven Central repository" />
+      <option name="url" value="https://repo1.maven.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="jboss.community" />
+      <option name="name" value="JBoss Community repository" />
+      <option name="url" value="https://repository.jboss.org/nexus/content/repositories/public/" />
+    </remote-repository>
+  </component>
+</project>
\ No newline at end of file
Index: ecommerce/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ecommerce/vcs.xml b/ecommerce/vcs.xml
new file mode 100644
--- /dev/null	(date 1739284887336)
+++ b/ecommerce/vcs.xml	(date 1739284887336)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: ecommerce/HELP.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ecommerce/HELP.md b/ecommerce/HELP.md
new file mode 100644
--- /dev/null	(date 1739284881680)
+++ b/ecommerce/HELP.md	(date 1739284881680)
@@ -0,0 +1,25 @@
+# Getting Started
+
+### Reference Documentation
+For further reference, please consider the following sections:
+
+* [Official Apache Maven documentation](https://maven.apache.org/guides/index.html)
+* [Spring Boot Maven Plugin Reference Guide](https://docs.spring.io/spring-boot/3.4.2/maven-plugin)
+* [Create an OCI image](https://docs.spring.io/spring-boot/3.4.2/maven-plugin/build-image.html)
+* [Spring Configuration Processor](https://docs.spring.io/spring-boot/3.4.2/specification/configuration-metadata/annotation-processor.html)
+* [Spring Data JPA](https://docs.spring.io/spring-boot/3.4.2/reference/data/sql.html#data.sql.jpa-and-spring-data)
+* [Spring Boot DevTools](https://docs.spring.io/spring-boot/3.4.2/reference/using/devtools.html)
+
+### Guides
+The following guides illustrate how to use some features concretely:
+
+* [Accessing Data with JPA](https://spring.io/guides/gs/accessing-data-jpa/)
+* [Accessing data with MySQL](https://spring.io/guides/gs/accessing-data-mysql/)
+
+### Maven Parent overrides
+
+Due to Maven's design, elements are inherited from the parent POM to the project POM.
+While most of the inheritance is fine, it also inherits unwanted elements like `<license>` and `<developers>` from the parent.
+To prevent this, the project POM contains empty overrides for these elements.
+If you manually switch to a different parent and actually want the inheritance, you need to remove those overrides.
+
Index: ecommerce/src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/ecommerce/src/main/resources/application.properties b/ecommerce/src/main/resources/application.properties
new file mode 100644
--- /dev/null	(date 1739386766770)
+++ b/ecommerce/src/main/resources/application.properties	(date 1739386766770)
@@ -0,0 +1,1 @@
+spring.application.name=ecommerce
Index: ecommerce/src/main/java/org/example/ecommerce/EcommerceApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ecommerce/src/main/java/org/example/ecommerce/EcommerceApplication.java b/ecommerce/src/main/java/org/example/ecommerce/EcommerceApplication.java
new file mode 100644
--- /dev/null	(date 1739386766754)
+++ b/ecommerce/src/main/java/org/example/ecommerce/EcommerceApplication.java	(date 1739386766754)
@@ -0,0 +1,13 @@
+package org.example.ecommerce;
+
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+
+@SpringBootApplication
+public class EcommerceApplication {
+
+	public static void main(String[] args) {
+		SpringApplication.run(EcommerceApplication.class, args);
+	}
+
+}
Index: ecommerce/src/main/java/org/example/ecommerce/dto/PlaceOrderResponseDto.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ecommerce/src/main/java/org/example/ecommerce/dto/PlaceOrderResponseDto.java b/ecommerce/src/main/java/org/example/ecommerce/dto/PlaceOrderResponseDto.java
new file mode 100644
--- /dev/null	(date 1739386766754)
+++ b/ecommerce/src/main/java/org/example/ecommerce/dto/PlaceOrderResponseDto.java	(date 1739386766754)
@@ -0,0 +1,10 @@
+package org.example.ecommerce.dto;
+
+import lombok.Data;
+import org.example.ecommerce.model.Order;
+
+@Data
+public class PlaceOrderResponseDto {
+    private Order order;
+    private ResponseStatus responseStatus;
+}
Index: ecommerce/src/main/java/org/example/ecommerce/dto/ResponseStatus.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ecommerce/src/main/java/org/example/ecommerce/dto/ResponseStatus.java b/ecommerce/src/main/java/org/example/ecommerce/dto/ResponseStatus.java
new file mode 100644
--- /dev/null	(date 1739386766754)
+++ b/ecommerce/src/main/java/org/example/ecommerce/dto/ResponseStatus.java	(date 1739386766754)
@@ -0,0 +1,6 @@
+package org.example.ecommerce.dto;
+
+public enum ResponseStatus {
+    SUCCESS,
+    FAILURE
+}
Index: ecommerce/src/test/java/org/example/ecommerce/EcommerceApplicationTests.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ecommerce/src/test/java/org/example/ecommerce/EcommerceApplicationTests.java b/ecommerce/src/test/java/org/example/ecommerce/EcommerceApplicationTests.java
new file mode 100644
--- /dev/null	(date 1739386766770)
+++ b/ecommerce/src/test/java/org/example/ecommerce/EcommerceApplicationTests.java	(date 1739386766770)
@@ -0,0 +1,13 @@
+package org.example.ecommerce;
+
+import org.junit.jupiter.api.Test;
+import org.springframework.boot.test.context.SpringBootTest;
+
+@SpringBootTest
+class EcommerceApplicationTests {
+
+	@Test
+	void contextLoads() {
+	}
+
+}
Index: ecommerce/src/main/java/org/example/ecommerce/dto/PlaceOrderRequestDto.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ecommerce/src/main/java/org/example/ecommerce/dto/PlaceOrderRequestDto.java b/ecommerce/src/main/java/org/example/ecommerce/dto/PlaceOrderRequestDto.java
new file mode 100644
--- /dev/null	(date 1739386766754)
+++ b/ecommerce/src/main/java/org/example/ecommerce/dto/PlaceOrderRequestDto.java	(date 1739386766754)
@@ -0,0 +1,12 @@
+package org.example.ecommerce.dto;
+
+import lombok.Data;
+import java.util.List;
+import org.springframework.data.util.Pair;
+
+@Data
+public class PlaceOrderRequestDto {
+    private int userId;
+    private int addressId;
+    private List<Pair<Integer, Integer>> orderDetails;
+}
Index: ecommerce/src/main/java/org/example/ecommerce/model/HighDemandProduct.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ecommerce/src/main/java/org/example/ecommerce/model/HighDemandProduct.java b/ecommerce/src/main/java/org/example/ecommerce/model/HighDemandProduct.java
new file mode 100644
--- /dev/null	(date 1739386766763)
+++ b/ecommerce/src/main/java/org/example/ecommerce/model/HighDemandProduct.java	(date 1739386766763)
@@ -0,0 +1,9 @@
+package org.example.ecommerce.model;
+
+import lombok.Data;
+
+@Data
+public class HighDemandProduct extends BaseModel{
+    private Product product;
+    private int maxQuantityPerProduct;
+}
Index: ecommerce/src/main/java/org/example/ecommerce/model/Inventory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ecommerce/src/main/java/org/example/ecommerce/model/Inventory.java b/ecommerce/src/main/java/org/example/ecommerce/model/Inventory.java
new file mode 100644
--- /dev/null	(date 1739386766763)
+++ b/ecommerce/src/main/java/org/example/ecommerce/model/Inventory.java	(date 1739386766763)
@@ -0,0 +1,11 @@
+package org.example.ecommerce.model;
+
+import jakarta.persistence.OneToMany;
+import lombok.Data;
+
+@Data
+public class Inventory extends BaseModel{
+    @OneToMany
+    private Product product;
+    private int quantity;
+}
Index: ecommerce/src/main/java/org/example/ecommerce/model/Address.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ecommerce/src/main/java/org/example/ecommerce/model/Address.java b/ecommerce/src/main/java/org/example/ecommerce/model/Address.java
new file mode 100644
--- /dev/null	(date 1739386766763)
+++ b/ecommerce/src/main/java/org/example/ecommerce/model/Address.java	(date 1739386766763)
@@ -0,0 +1,16 @@
+package org.example.ecommerce.model;
+
+import lombok.Data;
+
+@Data
+public class Address extends BaseModel{
+    private User user;
+    private String building;
+    private int floor;
+    private String roomNo;
+    private String street;
+    private String city;
+    private String state;
+    private String country;
+    private String zipCode;
+}
Index: ecommerce/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ecommerce/.gitignore b/ecommerce/.gitignore
new file mode 100644
--- /dev/null	(date 1739384567473)
+++ b/ecommerce/.gitignore	(date 1739384567473)
@@ -0,0 +1,8 @@
+# Default ignored files
+/shelf/
+/workspace.xml
+# Editor-based HTTP Client requests
+/httpRequests/
+# Datasource local storage ignored files
+/dataSources/
+/dataSources.local.xml
Index: ecommerce/src/main/java/org/example/ecommerce/model/BaseModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ecommerce/src/main/java/org/example/ecommerce/model/BaseModel.java b/ecommerce/src/main/java/org/example/ecommerce/model/BaseModel.java
new file mode 100644
--- /dev/null	(date 1739386766763)
+++ b/ecommerce/src/main/java/org/example/ecommerce/model/BaseModel.java	(date 1739386766763)
@@ -0,0 +1,13 @@
+package org.example.ecommerce.model;
+
+import jakarta.persistence.GeneratedValue;
+import jakarta.persistence.GenerationType;
+import jakarta.persistence.MappedSuperclass;
+import lombok.Data;
+
+@Data
+@MappedSuperclass
+public class BaseModel {
+    @GeneratedValue(strategy = GenerationType.IDENTITY)
+    private int id;
+}
Index: ecommerce/src/main/java/org/example/ecommerce/model/OrderStatus.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ecommerce/src/main/java/org/example/ecommerce/model/OrderStatus.java b/ecommerce/src/main/java/org/example/ecommerce/model/OrderStatus.java
new file mode 100644
--- /dev/null	(date 1739386766763)
+++ b/ecommerce/src/main/java/org/example/ecommerce/model/OrderStatus.java	(date 1739386766763)
@@ -0,0 +1,8 @@
+package org.example.ecommerce.model;
+
+public enum OrderStatus {
+    PLACED,
+    CANCELLED,
+    SHIPPED,
+    DELIVERED
+}
Index: ecommerce/src/main/java/org/example/ecommerce/model/Product.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ecommerce/src/main/java/org/example/ecommerce/model/Product.java b/ecommerce/src/main/java/org/example/ecommerce/model/Product.java
new file mode 100644
--- /dev/null	(date 1739386766763)
+++ b/ecommerce/src/main/java/org/example/ecommerce/model/Product.java	(date 1739386766763)
@@ -0,0 +1,10 @@
+package org.example.ecommerce.model;
+
+import lombok.Data;
+
+@Data
+public class Product extends BaseModel{
+    private String name;
+    private String description;
+    private double price;
+}
Index: ecommerce/src/main/java/org/example/ecommerce/model/Order.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ecommerce/src/main/java/org/example/ecommerce/model/Order.java b/ecommerce/src/main/java/org/example/ecommerce/model/Order.java
new file mode 100644
--- /dev/null	(date 1739386766763)
+++ b/ecommerce/src/main/java/org/example/ecommerce/model/Order.java	(date 1739386766763)
@@ -0,0 +1,13 @@
+package org.example.ecommerce.model;
+
+import lombok.Data;
+
+import java.util.List;
+
+@Data
+public class Order extends BaseModel{
+    private User user;
+    private Address deliveryAddress;
+    private List<OrderDetail> orderDetails;
+    private OrderStatus orderStatus;
+}
Index: ecommerce/src/main/java/org/example/ecommerce/model/OrderDetail.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ecommerce/src/main/java/org/example/ecommerce/model/OrderDetail.java b/ecommerce/src/main/java/org/example/ecommerce/model/OrderDetail.java
new file mode 100644
--- /dev/null	(date 1739386766763)
+++ b/ecommerce/src/main/java/org/example/ecommerce/model/OrderDetail.java	(date 1739386766763)
@@ -0,0 +1,10 @@
+package org.example.ecommerce.model;
+
+import lombok.Data;
+
+@Data
+public class OrderDetail extends BaseModel{
+    private Order order;
+    private Product product;
+    private int quantity;
+}
Index: ecommerce/src/main/java/org/example/ecommerce/service/OrderServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ecommerce/src/main/java/org/example/ecommerce/service/OrderServiceImpl.java b/ecommerce/src/main/java/org/example/ecommerce/service/OrderServiceImpl.java
new file mode 100644
--- /dev/null	(date 1739386766770)
+++ b/ecommerce/src/main/java/org/example/ecommerce/service/OrderServiceImpl.java	(date 1739386766770)
@@ -0,0 +1,110 @@
+package org.example.ecommerce.service;
+
+import org.example.ecommerce.model.*;
+import org.example.ecommerce.repository.*;
+import org.springframework.data.util.Pair;
+import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
+
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Optional;
+
+@Service
+public class OrderServiceImpl implements OrderService{
+    private UserRepository userRepository;
+    private OrderRepository orderRepository;
+    private AddressRepository addressRepository;
+    private ProductRepository productRepository;
+    private OrderDetailRepository orderDetailRepository;
+    private InventoryRepository inventoryRepository;
+    private HighDemandProductRepository highDemandProductRepository;
+
+    public OrderServiceImpl(OrderDetailRepository orderDetailRepository,AddressRepository addressRepository,
+                            OrderRepository orderRepository, ProductRepository productRepository,
+                            UserRepository userRepository, InventoryRepository inventoryRepository,
+                            HighDemandProductRepository highDemandProductRepository) {
+        this.addressRepository = addressRepository;
+        this.orderRepository = orderRepository;
+        this.productRepository = productRepository;
+        this.userRepository = userRepository;
+        this.orderDetailRepository = orderDetailRepository;
+        this.inventoryRepository = inventoryRepository;
+        this.highDemandProductRepository = highDemandProductRepository;
+    }
+
+    /*The request to place an order will contain the following information:
+        Before creating an order we need to check the following things:
+        1. Does the user exist in the system? If not then we need to throw an exception.
+        2. Does the address exist in the system? If not then we need to throw an exception.
+        3. Does the address belong to the user? If not then we need to throw an exception.
+        4. Do all the products have enough quantity to fill the order? If not then we need to throw an exception.
+        If all the above checks pass, then we need to update the inventory with the updated quantity, create an order
+            (with status as placed) and return the order details.
+        We should handle for concurrent requests, i.e. we should not overbook the inventory. We should allow concurrent
+            requests to place an order only if the inventory has enough quantity to fulfill the order.
+        Few products might be facing a lot of demand but their supply is limited eg. iPhones. For such products we will
+            store max number of quantity per order that a user can order. Details for such products will be stored in the high_demand_products table.*/
+
+    @Transactional
+    public Order placeOrder(int userId, int addressId, List<Pair<Integer, Integer>> orderDetails) throws Exception{
+        // Validate user and address
+        if (!userRepository.existsById(userId)) {
+            throw new IllegalArgumentException("User does not exist");
+        }
+        if (!addressRepository.existsById(addressId)) {
+            throw new IllegalArgumentException("Address does not exist");
+        }
+        if (!addressRepository.belongsToUser(addressId, userId)) {
+            throw new IllegalArgumentException("Address does not belong to the user");
+        }
+
+        List<OrderDetail> orderDetailList = new ArrayList<>();
+        for(Pair<Integer, Integer> pair: orderDetails){
+            int productId = pair.getFirst();
+            int orderedQuantity = pair.getSecond();
+            Optional<Product> optionalProduct = productRepository.findById(productId);
+            if(optionalProduct.isEmpty()){
+                throw new Exception("Product not found");
+            }
+            Product product = optionalProduct.get();
+            Optional<Inventory> optionalInventory = inventoryRepository.findByProduct_Id(product.getId());
+
+            if(optionalInventory.isEmpty()){
+                throw new Exception("Product is out of stock");
+            }
+            Inventory inventory = optionalInventory.get();
+            int quantity = inventory.getQuantity();
+
+            //check high-demand product limit
+            Optional<HighDemandProduct> optionalHighDemandProduct = highDemandProductRepository.findByProductId(productId);
+            if(optionalHighDemandProduct.isPresent() && orderedQuantity > optionalHighDemandProduct.get().getMaxQuantityPerProduct()){
+                throw new Exception("Ordered quantity exceeds limit for high-demand product");
+            }
+            if(quantity < orderedQuantity){
+                throw new Exception("Product is out of stock"); // use case 4
+            }else{
+                inventory.setQuantity(quantity - orderedQuantity);
+                inventoryRepository.save(inventory);
+            }
+
+            OrderDetail orderDetail = new OrderDetail();
+            orderDetail.setQuantity(orderedQuantity);
+            orderDetail.setProduct(product);
+            orderDetailList.add(orderDetail);
+        }
+        Order order = new Order();
+        order.setOrderDetails(orderDetailList);
+        order.setOrderStatus(OrderStatus.PLACED);
+        order.setUser(userRepository.findById(userId).orElseThrow(() -> new Exception("User not found")));
+        order.setDeliveryAddress(addressRepository.findById(addressId).orElseThrow(()-> new Exception("Address not found")));
+        orderRepository.save(order);
+        for(OrderDetail orderDetail: orderDetailList){
+            orderDetail.setOrder(order);
+            orderDetailRepository.save(orderDetail);
+        }
+        return order;
+    }
+
+
+}
Index: ecommerce/src/main/java/org/example/ecommerce/controller/OrderController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ecommerce/src/main/java/org/example/ecommerce/controller/OrderController.java b/ecommerce/src/main/java/org/example/ecommerce/controller/OrderController.java
new file mode 100644
--- /dev/null	(date 1739386766754)
+++ b/ecommerce/src/main/java/org/example/ecommerce/controller/OrderController.java	(date 1739386766754)
@@ -0,0 +1,23 @@
+package org.example.ecommerce.controller;
+
+import org.example.ecommerce.dto.PlaceOrderRequestDto;
+import org.example.ecommerce.dto.PlaceOrderResponseDto;
+import org.example.ecommerce.dto.ResponseStatus;
+import org.example.ecommerce.service.OrderService;
+import org.springframework.stereotype.Controller;
+
+@Controller
+public class OrderController {
+    private OrderService orderService;
+
+    public OrderController(OrderService orderService) {
+        this.orderService = orderService;
+    }
+
+    public PlaceOrderResponseDto placeOrder(PlaceOrderRequestDto placeOrderRequestDto) throws Exception {
+        PlaceOrderResponseDto placeOrderResponseDto = new PlaceOrderResponseDto();
+        placeOrderResponseDto.setOrder(orderService.placeOrder(placeOrderRequestDto.getUserId(), placeOrderRequestDto.getAddressId(), placeOrderRequestDto.getOrderDetails()));
+        placeOrderResponseDto.setResponseStatus(ResponseStatus.SUCCESS);
+        return placeOrderResponseDto;
+    }
+}
Index: ecommerce/src/main/java/org/example/ecommerce/model/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ecommerce/src/main/java/org/example/ecommerce/model/User.java b/ecommerce/src/main/java/org/example/ecommerce/model/User.java
new file mode 100644
--- /dev/null	(date 1739386766763)
+++ b/ecommerce/src/main/java/org/example/ecommerce/model/User.java	(date 1739386766763)
@@ -0,0 +1,13 @@
+package org.example.ecommerce.model;
+
+import lombok.Data;
+
+import java.util.List;
+
+@Data
+public class User extends BaseModel {
+    private String name;
+    private String email;
+    private List<Address> addressList;
+    private List<Order> orderList;
+}
Index: ecommerce/src/main/java/org/example/ecommerce/service/OrderService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ecommerce/src/main/java/org/example/ecommerce/service/OrderService.java b/ecommerce/src/main/java/org/example/ecommerce/service/OrderService.java
new file mode 100644
--- /dev/null	(date 1739386766770)
+++ b/ecommerce/src/main/java/org/example/ecommerce/service/OrderService.java	(date 1739386766770)
@@ -0,0 +1,12 @@
+package org.example.ecommerce.service;
+
+
+import org.example.ecommerce.model.Order;
+import org.springframework.data.util.Pair;
+
+import java.util.List;
+
+public interface OrderService {
+
+    public Order placeOrder(int userId, int addressId, List<Pair<Integer, Integer>> orderDetails) throws Exception;
+}
Index: ecommerce/src/main/java/org/example/ecommerce/repository/InventoryRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ecommerce/src/main/java/org/example/ecommerce/repository/InventoryRepository.java b/ecommerce/src/main/java/org/example/ecommerce/repository/InventoryRepository.java
new file mode 100644
--- /dev/null	(date 1739386766770)
+++ b/ecommerce/src/main/java/org/example/ecommerce/repository/InventoryRepository.java	(date 1739386766770)
@@ -0,0 +1,20 @@
+package org.example.ecommerce.repository;
+
+import org.example.ecommerce.model.Inventory;
+import org.springframework.data.jpa.repository.JpaRepository;
+import org.springframework.stereotype.Repository;
+
+import java.util.Optional;
+
+@Repository
+public interface InventoryRepository extends JpaRepository<Inventory, Integer> {
+
+    @Override
+    Optional<Inventory> findById(Integer productId);
+    
+
+    @Override
+    Inventory save(Inventory inventory);
+
+    Optional<Inventory> findByProduct_Id(int productId);
+}
Index: ecommerce/src/main/java/org/example/ecommerce/repository/OrderDetailRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ecommerce/src/main/java/org/example/ecommerce/repository/OrderDetailRepository.java b/ecommerce/src/main/java/org/example/ecommerce/repository/OrderDetailRepository.java
new file mode 100644
--- /dev/null	(date 1739386766770)
+++ b/ecommerce/src/main/java/org/example/ecommerce/repository/OrderDetailRepository.java	(date 1739386766770)
@@ -0,0 +1,19 @@
+package org.example.ecommerce.repository;
+
+import org.example.ecommerce.model.Order;
+import org.example.ecommerce.model.OrderDetail;
+import org.springframework.data.jpa.repository.JpaRepository;
+import org.springframework.stereotype.Repository;
+import java.util.*;
+
+@Repository
+public interface OrderDetailRepository extends JpaRepository<OrderDetail, Integer> {
+    @Override
+    Optional<OrderDetail> findById(Integer id);
+
+    @Override
+    OrderDetail save(OrderDetail orderDetail);
+
+    Order findByOrderId(Integer orderId);
+
+}
Index: ecommerce/src/main/java/org/example/ecommerce/repository/AddressRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ecommerce/src/main/java/org/example/ecommerce/repository/AddressRepository.java b/ecommerce/src/main/java/org/example/ecommerce/repository/AddressRepository.java
new file mode 100644
--- /dev/null	(date 1739386766763)
+++ b/ecommerce/src/main/java/org/example/ecommerce/repository/AddressRepository.java	(date 1739386766763)
@@ -0,0 +1,15 @@
+package org.example.ecommerce.repository;
+
+import org.example.ecommerce.model.Address;
+import org.springframework.data.jpa.repository.JpaRepository;
+import org.springframework.stereotype.Repository;
+
+@Repository
+public interface AddressRepository extends JpaRepository<Address, Integer> {
+    default boolean belongsToUser(int addressId, int userId){
+        return findById(addressId).map(address -> address.getUser()
+                .equals(userId)).orElse(false);
+    }
+
+    boolean existsById(int id);
+}
Index: ecommerce/src/main/java/org/example/ecommerce/repository/HighDemandProductRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ecommerce/src/main/java/org/example/ecommerce/repository/HighDemandProductRepository.java b/ecommerce/src/main/java/org/example/ecommerce/repository/HighDemandProductRepository.java
new file mode 100644
--- /dev/null	(date 1739386766763)
+++ b/ecommerce/src/main/java/org/example/ecommerce/repository/HighDemandProductRepository.java	(date 1739386766763)
@@ -0,0 +1,12 @@
+package org.example.ecommerce.repository;
+
+import org.example.ecommerce.model.HighDemandProduct;
+import org.springframework.data.jpa.repository.JpaRepository;
+
+import java.util.Optional;
+
+public interface HighDemandProductRepository extends JpaRepository<HighDemandProduct, Integer> {
+    boolean findHighDemandProductByProductIdExists(int productId);
+
+    Optional<HighDemandProduct> findByProductId(int productId);
+}
Index: ecommerce/src/main/java/org/example/ecommerce/repository/UserRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ecommerce/src/main/java/org/example/ecommerce/repository/UserRepository.java b/ecommerce/src/main/java/org/example/ecommerce/repository/UserRepository.java
new file mode 100644
--- /dev/null	(date 1739386766770)
+++ b/ecommerce/src/main/java/org/example/ecommerce/repository/UserRepository.java	(date 1739386766770)
@@ -0,0 +1,17 @@
+package org.example.ecommerce.repository;
+
+import org.example.ecommerce.model.User;
+import org.springframework.data.jpa.repository.JpaRepository;
+import org.springframework.stereotype.Repository;
+
+import java.util.Optional;
+
+@Repository
+public interface UserRepository extends JpaRepository<User, Integer> {
+    @Override
+    Optional<User> findById(Integer id);
+
+    Optional<User> findByEmail(String email);
+
+    User save(User user);
+}
Index: ecommerce/wrapper/maven-wrapper.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/ecommerce/wrapper/maven-wrapper.properties b/ecommerce/wrapper/maven-wrapper.properties
new file mode 100644
--- /dev/null	(date 1739384786660)
+++ b/ecommerce/wrapper/maven-wrapper.properties	(date 1739384786660)
@@ -0,0 +1,19 @@
+# Licensed to the Apache Software Foundation (ASF) under one
+# or more contributor license agreements.  See the NOTICE file
+# distributed with this work for additional information
+# regarding copyright ownership.  The ASF licenses this file
+# to you under the Apache License, Version 2.0 (the
+# "License"); you may not use this file except in compliance
+# with the License.  You may obtain a copy of the License at
+#
+#   http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing,
+# software distributed under the License is distributed on an
+# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+# KIND, either express or implied.  See the License for the
+# specific language governing permissions and limitations
+# under the License.
+wrapperVersion=3.3.2
+distributionType=only-script
+distributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.9.9/apache-maven-3.9.9-bin.zip
Index: ecommerce/src/main/java/org/example/ecommerce/repository/OrderRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ecommerce/src/main/java/org/example/ecommerce/repository/OrderRepository.java b/ecommerce/src/main/java/org/example/ecommerce/repository/OrderRepository.java
new file mode 100644
--- /dev/null	(date 1739386766770)
+++ b/ecommerce/src/main/java/org/example/ecommerce/repository/OrderRepository.java	(date 1739386766770)
@@ -0,0 +1,9 @@
+package org.example.ecommerce.repository;
+
+import org.example.ecommerce.model.Order;
+import org.springframework.data.jpa.repository.JpaRepository;
+import org.springframework.stereotype.Repository;
+
+@Repository
+public interface OrderRepository extends JpaRepository<Order, Integer> {
+}
Index: ecommerce/src/main/java/org/example/ecommerce/repository/ProductRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ecommerce/src/main/java/org/example/ecommerce/repository/ProductRepository.java b/ecommerce/src/main/java/org/example/ecommerce/repository/ProductRepository.java
new file mode 100644
--- /dev/null	(date 1739386766770)
+++ b/ecommerce/src/main/java/org/example/ecommerce/repository/ProductRepository.java	(date 1739386766770)
@@ -0,0 +1,17 @@
+package org.example.ecommerce.repository;
+
+import org.example.ecommerce.model.Product;
+import org.springframework.data.jpa.repository.JpaRepository;
+import org.springframework.stereotype.Repository;
+
+import java.util.Optional;
+
+@Repository
+public interface ProductRepository extends JpaRepository<Product, Integer> {
+    @Override
+    Optional<Product> findById(Integer id);
+    @Override
+    Product save(Product product);
+
+
+}
Index: ecommerce/.idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ecommerce/.idea/misc.xml b/ecommerce/.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1739455030874)
+++ b/ecommerce/.idea/misc.xml	(date 1739455030874)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ExternalStorageConfigurationManager" enabled="true" />
+  <component name="MavenProjectsManager">
+    <option name="originalFiles">
+      <list>
+        <option value="$PROJECT_DIR$/pom.xml" />
+      </list>
+    </option>
+  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="17" project-jdk-type="JavaSDK" />
+</project>
\ No newline at end of file
Index: ecommerce/.idea/encodings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ecommerce/.idea/encodings.xml b/ecommerce/.idea/encodings.xml
new file mode 100644
--- /dev/null	(date 1739455030877)
+++ b/ecommerce/.idea/encodings.xml	(date 1739455030877)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Encoding">
+    <file url="file://$PROJECT_DIR$/src/main/java" charset="UTF-8" />
+  </component>
+</project>
\ No newline at end of file
Index: ecommerce/.idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ecommerce/.idea/workspace.xml b/ecommerce/.idea/workspace.xml
new file mode 100644
--- /dev/null	(date 1739535329635)
+++ b/ecommerce/.idea/workspace.xml	(date 1739535329635)
@@ -0,0 +1,199 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="AutoImportSettings">
+    <option name="autoReloadType" value="SELECTIVE" />
+  </component>
+  <component name="ChangeListManager">
+    <list default="true" id="e04de122-2e7a-4c57-a5a5-6bd2a9d8d4cf" name="Changes" comment="Ecommerce application 'Place order' use case">
+      <change afterPath="$PROJECT_DIR$/.gitattributes" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/compiler.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/encodings.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/jarRepositories.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/HELP.md" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/compiler.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/encodings.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/jarRepositories.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/misc.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/mvnw" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/mvnw.cmd" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/ecommerce/EcommerceApplication.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/ecommerce/controller/OrderController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/ecommerce/dto/PlaceOrderRequestDto.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/ecommerce/dto/PlaceOrderResponseDto.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/ecommerce/dto/ResponseStatus.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/ecommerce/model/Address.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/ecommerce/model/BaseModel.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/ecommerce/model/HighDemandProduct.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/ecommerce/model/Inventory.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/ecommerce/model/Order.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/ecommerce/model/OrderDetail.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/ecommerce/model/OrderStatus.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/ecommerce/model/Product.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/ecommerce/model/User.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/ecommerce/repository/AddressRepository.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/ecommerce/repository/HighDemandProductRepository.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/ecommerce/repository/InventoryRepository.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/ecommerce/repository/OrderDetailRepository.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/ecommerce/repository/OrderRepository.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/ecommerce/repository/ProductRepository.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/ecommerce/repository/UserRepository.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/ecommerce/service/OrderService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/ecommerce/service/OrderServiceImpl.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/application.properties" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/test/java/org/example/ecommerce/EcommerceApplicationTests.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vcs.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/wrapper/maven-wrapper.properties" afterDir="false" />
+    </list>
+    <option name="SHOW_DIALOG" value="false" />
+    <option name="HIGHLIGHT_CONFLICTS" value="true" />
+    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
+    <option name="LAST_RESOLUTION" value="IGNORE" />
+  </component>
+  <component name="FileTemplateManagerImpl">
+    <option name="RECENT_TEMPLATES">
+      <list>
+        <option value="Enum" />
+        <option value="Interface" />
+        <option value="Class" />
+      </list>
+    </option>
+  </component>
+  <component name="Git.Settings">
+    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
+  </component>
+  <component name="GitHubPullRequestSearchHistory">{
+  &quot;lastFilter&quot;: {
+    &quot;state&quot;: &quot;OPEN&quot;,
+    &quot;assignee&quot;: &quot;Polashi&quot;
+  }
+}</component>
+  <component name="GithubPullRequestsUISettings">{
+  &quot;selectedUrlAndAccountId&quot;: {
+    &quot;url&quot;: &quot;https://github.com/Polashi/lowLevelDesign.git&quot;,
+    &quot;accountId&quot;: &quot;cfc23977-2a01-4cf9-bbdf-a4503f6567ea&quot;
+  }
+}</component>
+  <component name="MavenImportPreferences">
+    <option name="generalSettings">
+      <MavenGeneralSettings>
+        <option name="mavenHomeTypeForPersistence" value="WRAPPER" />
+      </MavenGeneralSettings>
+    </option>
+  </component>
+  <component name="ProjectColorInfo">{
+  &quot;associatedIndex&quot;: 8
+}</component>
+  <component name="ProjectId" id="2stpmADrrKck0ypuUBeJptLEzlf" />
+  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
+    <ConfirmationsSetting value="2" id="Add" />
+  </component>
+  <component name="ProjectViewState">
+    <option name="hideEmptyMiddlePackages" value="true" />
+    <option name="showLibraryContents" value="true" />
+  </component>
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "ASKED_SHARE_PROJECT_CONFIGURATION_FILES": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "RunOnceActivity.git.unshallow": "true",
+    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
+    "git-widget-placeholder": "main",
+    "kotlin-language-version-configured": "true",
+    "last_opened_file_path": "C:/gitRepsitory/lowLevelDesign/ecommerce",
+    "node.js.detected.package.eslint": "true",
+    "node.js.detected.package.tslint": "true",
+    "node.js.selected.package.eslint": "(autodetect)",
+    "node.js.selected.package.tslint": "(autodetect)",
+    "nodejs_package_manager_path": "npm",
+    "vue.rearranger.settings.migration": "true"
+  }
+}]]></component>
+  <component name="RecentsManager">
+    <key name="CreateClassDialog.RecentsKey">
+      <recent name="org.example.ecommerce.dto" />
+      <recent name="org.example.ecommerce.model" />
+    </key>
+  </component>
+  <component name="RunManager">
+    <configuration name="EcommerceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
+      <option name="FRAME_DEACTIVATION_UPDATE_POLICY" value="UpdateClassesAndResources" />
+      <module name="ecommerce" />
+      <option name="SPRING_BOOT_MAIN_CLASS" value="org.example.ecommerce.EcommerceApplication" />
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+  </component>
+  <component name="SharedIndexes">
+    <attachedChunks>
+      <set>
+        <option value="bundled-jdk-9823dce3aa75-125ca727e0f0-intellij.indexing.shared.core-IU-243.23654.153" />
+        <option value="bundled-js-predefined-d6986cc7102b-822845ee3bb5-JavaScript-IU-243.23654.153" />
+      </set>
+    </attachedChunks>
+  </component>
+  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
+  <component name="TaskManager">
+    <task active="true" id="Default" summary="Default task">
+      <changelist id="e04de122-2e7a-4c57-a5a5-6bd2a9d8d4cf" name="Changes" comment="" />
+      <created>1739284884920</created>
+      <option name="number" value="Default" />
+      <option name="presentableId" value="Default" />
+      <updated>1739284884920</updated>
+      <workItem from="1739284885884" duration="20131000" />
+      <workItem from="1739386212076" duration="2752000" />
+      <workItem from="1739454457427" duration="427000" />
+      <workItem from="1739454975016" duration="4494000" />
+    </task>
+    <task id="LOCAL-00001" summary="Ecommerce application 'Place order' use case">
+      <option name="closed" value="true" />
+      <created>1739301083756</created>
+      <option name="number" value="00001" />
+      <option name="presentableId" value="LOCAL-00001" />
+      <option name="project" value="LOCAL" />
+      <updated>1739301083756</updated>
+    </task>
+    <task id="LOCAL-00002" summary="Ecommerce application 'Place order' use case">
+      <option name="closed" value="true" />
+      <created>1739379852491</created>
+      <option name="number" value="00002" />
+      <option name="presentableId" value="LOCAL-00002" />
+      <option name="project" value="LOCAL" />
+      <updated>1739379852491</updated>
+    </task>
+    <task id="LOCAL-00003" summary="Ecommerce application 'Place order' use case">
+      <option name="closed" value="true" />
+      <created>1739386852769</created>
+      <option name="number" value="00003" />
+      <option name="presentableId" value="LOCAL-00003" />
+      <option name="project" value="LOCAL" />
+      <updated>1739386852769</updated>
+    </task>
+    <option name="localTasksCounter" value="4" />
+    <servers />
+  </component>
+  <component name="TypeScriptGeneratedFilesManager">
+    <option name="version" value="3" />
+  </component>
+  <component name="Vcs.Log.Tabs.Properties">
+    <option name="TAB_STATES">
+      <map>
+        <entry key="MAIN">
+          <value>
+            <State />
+          </value>
+        </entry>
+      </map>
+    </option>
+  </component>
+  <component name="VcsManagerConfiguration">
+    <MESSAGE value="Ecommerce application 'Place order' use case" />
+    <option name="LAST_COMMIT_MESSAGE" value="Ecommerce application 'Place order' use case" />
+  </component>
+</project>
\ No newline at end of file
Index: ecommerce/.idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ecommerce/.idea/compiler.xml b/ecommerce/.idea/compiler.xml
new file mode 100644
--- /dev/null	(date 1739455030871)
+++ b/ecommerce/.idea/compiler.xml	(date 1739455030871)
@@ -0,0 +1,22 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <annotationProcessing>
+      <profile name="Annotation profile for ecommerce" enabled="true">
+        <sourceOutputDir name="target/generated-sources/annotations" />
+        <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
+        <outputRelativeToContentRoot value="true" />
+        <processorPath useClasspath="false">
+          <entry name="$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-configuration-processor/unknown/spring-boot-configuration-processor-unknown.jar" />
+          <entry name="$MAVEN_REPOSITORY$/org/projectlombok/lombok/unknown/lombok-unknown.jar" />
+        </processorPath>
+        <module name="ecommerce" />
+      </profile>
+    </annotationProcessing>
+  </component>
+  <component name="JavacSettings">
+    <option name="ADDITIONAL_OPTIONS_OVERRIDE">
+      <module name="ecommerce" options="-parameters" />
+    </option>
+  </component>
+</project>
\ No newline at end of file
Index: ecommerce/.idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ecommerce/.idea/vcs.xml b/ecommerce/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1739454887936)
+++ b/ecommerce/.idea/vcs.xml	(date 1739454887936)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$/.." vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: ecommerce/.idea/jarRepositories.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ecommerce/.idea/jarRepositories.xml b/ecommerce/.idea/jarRepositories.xml
new file mode 100644
--- /dev/null	(date 1739455030879)
+++ b/ecommerce/.idea/jarRepositories.xml	(date 1739455030879)
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="RemoteRepositoriesConfiguration">
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Central Repository" />
+      <option name="url" value="https://repo.maven.apache.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Maven Central repository" />
+      <option name="url" value="https://repo1.maven.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="jboss.community" />
+      <option name="name" value="JBoss Community repository" />
+      <option name="url" value="https://repository.jboss.org/nexus/content/repositories/public/" />
+    </remote-repository>
+  </component>
+</project>
\ No newline at end of file
Index: ecommerce/.gitattributes
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ecommerce/.gitattributes b/ecommerce/.gitattributes
new file mode 100644
--- /dev/null	(date 1739384786658)
+++ b/ecommerce/.gitattributes	(date 1739384786658)
@@ -0,0 +1,2 @@
+/mvnw text eol=lf
+*.cmd text eol=crlf
Index: ecommerce/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ecommerce/misc.xml b/ecommerce/misc.xml
new file mode 100644
--- /dev/null	(date 1739284899276)
+++ b/ecommerce/misc.xml	(date 1739284899276)
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ExternalStorageConfigurationManager" enabled="true" />
+  <component name="MavenProjectsManager">
+    <option name="originalFiles">
+      <list>
+        <option value="$PROJECT_DIR$/pom.xml" />
+      </list>
+    </option>
+  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="17" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
Index: ecommerce/mvnw
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ecommerce/mvnw b/ecommerce/mvnw
new file mode 100644
--- /dev/null	(date 1739384786660)
+++ b/ecommerce/mvnw	(date 1739384786660)
@@ -0,0 +1,259 @@
+#!/bin/sh
+# ----------------------------------------------------------------------------
+# Licensed to the Apache Software Foundation (ASF) under one
+# or more contributor license agreements.  See the NOTICE file
+# distributed with this work for additional information
+# regarding copyright ownership.  The ASF licenses this file
+# to you under the Apache License, Version 2.0 (the
+# "License"); you may not use this file except in compliance
+# with the License.  You may obtain a copy of the License at
+#
+#    http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing,
+# software distributed under the License is distributed on an
+# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+# KIND, either express or implied.  See the License for the
+# specific language governing permissions and limitations
+# under the License.
+# ----------------------------------------------------------------------------
+
+# ----------------------------------------------------------------------------
+# Apache Maven Wrapper startup batch script, version 3.3.2
+#
+# Optional ENV vars
+# -----------------
+#   JAVA_HOME - location of a JDK home dir, required when download maven via java source
+#   MVNW_REPOURL - repo url base for downloading maven distribution
+#   MVNW_USERNAME/MVNW_PASSWORD - user and password for downloading maven
+#   MVNW_VERBOSE - true: enable verbose log; debug: trace the mvnw script; others: silence the output
+# ----------------------------------------------------------------------------
+
+set -euf
+[ "${MVNW_VERBOSE-}" != debug ] || set -x
+
+# OS specific support.
+native_path() { printf %s\\n "$1"; }
+case "$(uname)" in
+CYGWIN* | MINGW*)
+  [ -z "${JAVA_HOME-}" ] || JAVA_HOME="$(cygpath --unix "$JAVA_HOME")"
+  native_path() { cygpath --path --windows "$1"; }
+  ;;
+esac
+
+# set JAVACMD and JAVACCMD
+set_java_home() {
+  # For Cygwin and MinGW, ensure paths are in Unix format before anything is touched
+  if [ -n "${JAVA_HOME-}" ]; then
+    if [ -x "$JAVA_HOME/jre/sh/java" ]; then
+      # IBM's JDK on AIX uses strange locations for the executables
+      JAVACMD="$JAVA_HOME/jre/sh/java"
+      JAVACCMD="$JAVA_HOME/jre/sh/javac"
+    else
+      JAVACMD="$JAVA_HOME/bin/java"
+      JAVACCMD="$JAVA_HOME/bin/javac"
+
+      if [ ! -x "$JAVACMD" ] || [ ! -x "$JAVACCMD" ]; then
+        echo "The JAVA_HOME environment variable is not defined correctly, so mvnw cannot run." >&2
+        echo "JAVA_HOME is set to \"$JAVA_HOME\", but \"\$JAVA_HOME/bin/java\" or \"\$JAVA_HOME/bin/javac\" does not exist." >&2
+        return 1
+      fi
+    fi
+  else
+    JAVACMD="$(
+      'set' +e
+      'unset' -f command 2>/dev/null
+      'command' -v java
+    )" || :
+    JAVACCMD="$(
+      'set' +e
+      'unset' -f command 2>/dev/null
+      'command' -v javac
+    )" || :
+
+    if [ ! -x "${JAVACMD-}" ] || [ ! -x "${JAVACCMD-}" ]; then
+      echo "The java/javac command does not exist in PATH nor is JAVA_HOME set, so mvnw cannot run." >&2
+      return 1
+    fi
+  fi
+}
+
+# hash string like Java String::hashCode
+hash_string() {
+  str="${1:-}" h=0
+  while [ -n "$str" ]; do
+    char="${str%"${str#?}"}"
+    h=$(((h * 31 + $(LC_CTYPE=C printf %d "'$char")) % 4294967296))
+    str="${str#?}"
+  done
+  printf %x\\n $h
+}
+
+verbose() { :; }
+[ "${MVNW_VERBOSE-}" != true ] || verbose() { printf %s\\n "${1-}"; }
+
+die() {
+  printf %s\\n "$1" >&2
+  exit 1
+}
+
+trim() {
+  # MWRAPPER-139:
+  #   Trims trailing and leading whitespace, carriage returns, tabs, and linefeeds.
+  #   Needed for removing poorly interpreted newline sequences when running in more
+  #   exotic environments such as mingw bash on Windows.
+  printf "%s" "${1}" | tr -d '[:space:]'
+}
+
+# parse distributionUrl and optional distributionSha256Sum, requires .mvn/wrapper/maven-wrapper.properties
+while IFS="=" read -r key value; do
+  case "${key-}" in
+  distributionUrl) distributionUrl=$(trim "${value-}") ;;
+  distributionSha256Sum) distributionSha256Sum=$(trim "${value-}") ;;
+  esac
+done <"${0%/*}/.mvn/wrapper/maven-wrapper.properties"
+[ -n "${distributionUrl-}" ] || die "cannot read distributionUrl property in ${0%/*}/.mvn/wrapper/maven-wrapper.properties"
+
+case "${distributionUrl##*/}" in
+maven-mvnd-*bin.*)
+  MVN_CMD=mvnd.sh _MVNW_REPO_PATTERN=/maven/mvnd/
+  case "${PROCESSOR_ARCHITECTURE-}${PROCESSOR_ARCHITEW6432-}:$(uname -a)" in
+  *AMD64:CYGWIN* | *AMD64:MINGW*) distributionPlatform=windows-amd64 ;;
+  :Darwin*x86_64) distributionPlatform=darwin-amd64 ;;
+  :Darwin*arm64) distributionPlatform=darwin-aarch64 ;;
+  :Linux*x86_64*) distributionPlatform=linux-amd64 ;;
+  *)
+    echo "Cannot detect native platform for mvnd on $(uname)-$(uname -m), use pure java version" >&2
+    distributionPlatform=linux-amd64
+    ;;
+  esac
+  distributionUrl="${distributionUrl%-bin.*}-$distributionPlatform.zip"
+  ;;
+maven-mvnd-*) MVN_CMD=mvnd.sh _MVNW_REPO_PATTERN=/maven/mvnd/ ;;
+*) MVN_CMD="mvn${0##*/mvnw}" _MVNW_REPO_PATTERN=/org/apache/maven/ ;;
+esac
+
+# apply MVNW_REPOURL and calculate MAVEN_HOME
+# maven home pattern: ~/.m2/wrapper/dists/{apache-maven-<version>,maven-mvnd-<version>-<platform>}/<hash>
+[ -z "${MVNW_REPOURL-}" ] || distributionUrl="$MVNW_REPOURL$_MVNW_REPO_PATTERN${distributionUrl#*"$_MVNW_REPO_PATTERN"}"
+distributionUrlName="${distributionUrl##*/}"
+distributionUrlNameMain="${distributionUrlName%.*}"
+distributionUrlNameMain="${distributionUrlNameMain%-bin}"
+MAVEN_USER_HOME="${MAVEN_USER_HOME:-${HOME}/.m2}"
+MAVEN_HOME="${MAVEN_USER_HOME}/wrapper/dists/${distributionUrlNameMain-}/$(hash_string "$distributionUrl")"
+
+exec_maven() {
+  unset MVNW_VERBOSE MVNW_USERNAME MVNW_PASSWORD MVNW_REPOURL || :
+  exec "$MAVEN_HOME/bin/$MVN_CMD" "$@" || die "cannot exec $MAVEN_HOME/bin/$MVN_CMD"
+}
+
+if [ -d "$MAVEN_HOME" ]; then
+  verbose "found existing MAVEN_HOME at $MAVEN_HOME"
+  exec_maven "$@"
+fi
+
+case "${distributionUrl-}" in
+*?-bin.zip | *?maven-mvnd-?*-?*.zip) ;;
+*) die "distributionUrl is not valid, must match *-bin.zip or maven-mvnd-*.zip, but found '${distributionUrl-}'" ;;
+esac
+
+# prepare tmp dir
+if TMP_DOWNLOAD_DIR="$(mktemp -d)" && [ -d "$TMP_DOWNLOAD_DIR" ]; then
+  clean() { rm -rf -- "$TMP_DOWNLOAD_DIR"; }
+  trap clean HUP INT TERM EXIT
+else
+  die "cannot create temp dir"
+fi
+
+mkdir -p -- "${MAVEN_HOME%/*}"
+
+# Download and Install Apache Maven
+verbose "Couldn't find MAVEN_HOME, downloading and installing it ..."
+verbose "Downloading from: $distributionUrl"
+verbose "Downloading to: $TMP_DOWNLOAD_DIR/$distributionUrlName"
+
+# select .zip or .tar.gz
+if ! command -v unzip >/dev/null; then
+  distributionUrl="${distributionUrl%.zip}.tar.gz"
+  distributionUrlName="${distributionUrl##*/}"
+fi
+
+# verbose opt
+__MVNW_QUIET_WGET=--quiet __MVNW_QUIET_CURL=--silent __MVNW_QUIET_UNZIP=-q __MVNW_QUIET_TAR=''
+[ "${MVNW_VERBOSE-}" != true ] || __MVNW_QUIET_WGET='' __MVNW_QUIET_CURL='' __MVNW_QUIET_UNZIP='' __MVNW_QUIET_TAR=v
+
+# normalize http auth
+case "${MVNW_PASSWORD:+has-password}" in
+'') MVNW_USERNAME='' MVNW_PASSWORD='' ;;
+has-password) [ -n "${MVNW_USERNAME-}" ] || MVNW_USERNAME='' MVNW_PASSWORD='' ;;
+esac
+
+if [ -z "${MVNW_USERNAME-}" ] && command -v wget >/dev/null; then
+  verbose "Found wget ... using wget"
+  wget ${__MVNW_QUIET_WGET:+"$__MVNW_QUIET_WGET"} "$distributionUrl" -O "$TMP_DOWNLOAD_DIR/$distributionUrlName" || die "wget: Failed to fetch $distributionUrl"
+elif [ -z "${MVNW_USERNAME-}" ] && command -v curl >/dev/null; then
+  verbose "Found curl ... using curl"
+  curl ${__MVNW_QUIET_CURL:+"$__MVNW_QUIET_CURL"} -f -L -o "$TMP_DOWNLOAD_DIR/$distributionUrlName" "$distributionUrl" || die "curl: Failed to fetch $distributionUrl"
+elif set_java_home; then
+  verbose "Falling back to use Java to download"
+  javaSource="$TMP_DOWNLOAD_DIR/Downloader.java"
+  targetZip="$TMP_DOWNLOAD_DIR/$distributionUrlName"
+  cat >"$javaSource" <<-END
+	public class Downloader extends java.net.Authenticator
+	{
+	  protected java.net.PasswordAuthentication getPasswordAuthentication()
+	  {
+	    return new java.net.PasswordAuthentication( System.getenv( "MVNW_USERNAME" ), System.getenv( "MVNW_PASSWORD" ).toCharArray() );
+	  }
+	  public static void main( String[] args ) throws Exception
+	  {
+	    setDefault( new Downloader() );
+	    java.nio.file.Files.copy( java.net.URI.create( args[0] ).toURL().openStream(), java.nio.file.Paths.get( args[1] ).toAbsolutePath().normalize() );
+	  }
+	}
+	END
+  # For Cygwin/MinGW, switch paths to Windows format before running javac and java
+  verbose " - Compiling Downloader.java ..."
+  "$(native_path "$JAVACCMD")" "$(native_path "$javaSource")" || die "Failed to compile Downloader.java"
+  verbose " - Running Downloader.java ..."
+  "$(native_path "$JAVACMD")" -cp "$(native_path "$TMP_DOWNLOAD_DIR")" Downloader "$distributionUrl" "$(native_path "$targetZip")"
+fi
+
+# If specified, validate the SHA-256 sum of the Maven distribution zip file
+if [ -n "${distributionSha256Sum-}" ]; then
+  distributionSha256Result=false
+  if [ "$MVN_CMD" = mvnd.sh ]; then
+    echo "Checksum validation is not supported for maven-mvnd." >&2
+    echo "Please disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties." >&2
+    exit 1
+  elif command -v sha256sum >/dev/null; then
+    if echo "$distributionSha256Sum  $TMP_DOWNLOAD_DIR/$distributionUrlName" | sha256sum -c >/dev/null 2>&1; then
+      distributionSha256Result=true
+    fi
+  elif command -v shasum >/dev/null; then
+    if echo "$distributionSha256Sum  $TMP_DOWNLOAD_DIR/$distributionUrlName" | shasum -a 256 -c >/dev/null 2>&1; then
+      distributionSha256Result=true
+    fi
+  else
+    echo "Checksum validation was requested but neither 'sha256sum' or 'shasum' are available." >&2
+    echo "Please install either command, or disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties." >&2
+    exit 1
+  fi
+  if [ $distributionSha256Result = false ]; then
+    echo "Error: Failed to validate Maven distribution SHA-256, your Maven distribution might be compromised." >&2
+    echo "If you updated your Maven version, you need to update the specified distributionSha256Sum property." >&2
+    exit 1
+  fi
+fi
+
+# unzip and move
+if command -v unzip >/dev/null; then
+  unzip ${__MVNW_QUIET_UNZIP:+"$__MVNW_QUIET_UNZIP"} "$TMP_DOWNLOAD_DIR/$distributionUrlName" -d "$TMP_DOWNLOAD_DIR" || die "failed to unzip"
+else
+  tar xzf${__MVNW_QUIET_TAR:+"$__MVNW_QUIET_TAR"} "$TMP_DOWNLOAD_DIR/$distributionUrlName" -C "$TMP_DOWNLOAD_DIR" || die "failed to untar"
+fi
+printf %s\\n "$distributionUrl" >"$TMP_DOWNLOAD_DIR/$distributionUrlNameMain/mvnw.url"
+mv -- "$TMP_DOWNLOAD_DIR/$distributionUrlNameMain" "$MAVEN_HOME" || [ -d "$MAVEN_HOME" ] || die "fail to move MAVEN_HOME"
+
+clean || :
+exec_maven "$@"
Index: ecommerce/encodings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ecommerce/encodings.xml b/ecommerce/encodings.xml
new file mode 100644
--- /dev/null	(date 1739284899279)
+++ b/ecommerce/encodings.xml	(date 1739284899279)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Encoding">
+    <file url="file://$PROJECT_DIR$/src/main/java" charset="UTF-8" />
+  </component>
+</project>
\ No newline at end of file
Index: ecommerce/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ecommerce/compiler.xml b/ecommerce/compiler.xml
new file mode 100644
--- /dev/null	(date 1739284899267)
+++ b/ecommerce/compiler.xml	(date 1739284899267)
@@ -0,0 +1,22 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <annotationProcessing>
+      <profile name="Annotation profile for ecommerce" enabled="true">
+        <sourceOutputDir name="target/generated-sources/annotations" />
+        <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
+        <outputRelativeToContentRoot value="true" />
+        <processorPath useClasspath="false">
+          <entry name="$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-configuration-processor/unknown/spring-boot-configuration-processor-unknown.jar" />
+          <entry name="$MAVEN_REPOSITORY$/org/projectlombok/lombok/unknown/lombok-unknown.jar" />
+        </processorPath>
+        <module name="ecommerce" />
+      </profile>
+    </annotationProcessing>
+  </component>
+  <component name="JavacSettings">
+    <option name="ADDITIONAL_OPTIONS_OVERRIDE">
+      <module name="ecommerce" options="-parameters" />
+    </option>
+  </component>
+</project>
\ No newline at end of file
Index: ecommerce/mvnw.cmd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ecommerce/mvnw.cmd b/ecommerce/mvnw.cmd
new file mode 100644
--- /dev/null	(date 1739384786660)
+++ b/ecommerce/mvnw.cmd	(date 1739384786660)
@@ -0,0 +1,149 @@
+<# : batch portion
+@REM ----------------------------------------------------------------------------
+@REM Licensed to the Apache Software Foundation (ASF) under one
+@REM or more contributor license agreements.  See the NOTICE file
+@REM distributed with this work for additional information
+@REM regarding copyright ownership.  The ASF licenses this file
+@REM to you under the Apache License, Version 2.0 (the
+@REM "License"); you may not use this file except in compliance
+@REM with the License.  You may obtain a copy of the License at
+@REM
+@REM    http://www.apache.org/licenses/LICENSE-2.0
+@REM
+@REM Unless required by applicable law or agreed to in writing,
+@REM software distributed under the License is distributed on an
+@REM "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+@REM KIND, either express or implied.  See the License for the
+@REM specific language governing permissions and limitations
+@REM under the License.
+@REM ----------------------------------------------------------------------------
+
+@REM ----------------------------------------------------------------------------
+@REM Apache Maven Wrapper startup batch script, version 3.3.2
+@REM
+@REM Optional ENV vars
+@REM   MVNW_REPOURL - repo url base for downloading maven distribution
+@REM   MVNW_USERNAME/MVNW_PASSWORD - user and password for downloading maven
+@REM   MVNW_VERBOSE - true: enable verbose log; others: silence the output
+@REM ----------------------------------------------------------------------------
+
+@IF "%__MVNW_ARG0_NAME__%"=="" (SET __MVNW_ARG0_NAME__=%~nx0)
+@SET __MVNW_CMD__=
+@SET __MVNW_ERROR__=
+@SET __MVNW_PSMODULEP_SAVE=%PSModulePath%
+@SET PSModulePath=
+@FOR /F "usebackq tokens=1* delims==" %%A IN (`powershell -noprofile "& {$scriptDir='%~dp0'; $script='%__MVNW_ARG0_NAME__%'; icm -ScriptBlock ([Scriptblock]::Create((Get-Content -Raw '%~f0'))) -NoNewScope}"`) DO @(
+  IF "%%A"=="MVN_CMD" (set __MVNW_CMD__=%%B) ELSE IF "%%B"=="" (echo %%A) ELSE (echo %%A=%%B)
+)
+@SET PSModulePath=%__MVNW_PSMODULEP_SAVE%
+@SET __MVNW_PSMODULEP_SAVE=
+@SET __MVNW_ARG0_NAME__=
+@SET MVNW_USERNAME=
+@SET MVNW_PASSWORD=
+@IF NOT "%__MVNW_CMD__%"=="" (%__MVNW_CMD__% %*)
+@echo Cannot start maven from wrapper >&2 && exit /b 1
+@GOTO :EOF
+: end batch / begin powershell #>
+
+$ErrorActionPreference = "Stop"
+if ($env:MVNW_VERBOSE -eq "true") {
+  $VerbosePreference = "Continue"
+}
+
+# calculate distributionUrl, requires .mvn/wrapper/maven-wrapper.properties
+$distributionUrl = (Get-Content -Raw "$scriptDir/.mvn/wrapper/maven-wrapper.properties" | ConvertFrom-StringData).distributionUrl
+if (!$distributionUrl) {
+  Write-Error "cannot read distributionUrl property in $scriptDir/.mvn/wrapper/maven-wrapper.properties"
+}
+
+switch -wildcard -casesensitive ( $($distributionUrl -replace '^.*/','') ) {
+  "maven-mvnd-*" {
+    $USE_MVND = $true
+    $distributionUrl = $distributionUrl -replace '-bin\.[^.]*$',"-windows-amd64.zip"
+    $MVN_CMD = "mvnd.cmd"
+    break
+  }
+  default {
+    $USE_MVND = $false
+    $MVN_CMD = $script -replace '^mvnw','mvn'
+    break
+  }
+}
+
+# apply MVNW_REPOURL and calculate MAVEN_HOME
+# maven home pattern: ~/.m2/wrapper/dists/{apache-maven-<version>,maven-mvnd-<version>-<platform>}/<hash>
+if ($env:MVNW_REPOURL) {
+  $MVNW_REPO_PATTERN = if ($USE_MVND) { "/org/apache/maven/" } else { "/maven/mvnd/" }
+  $distributionUrl = "$env:MVNW_REPOURL$MVNW_REPO_PATTERN$($distributionUrl -replace '^.*'+$MVNW_REPO_PATTERN,'')"
+}
+$distributionUrlName = $distributionUrl -replace '^.*/',''
+$distributionUrlNameMain = $distributionUrlName -replace '\.[^.]*$','' -replace '-bin$',''
+$MAVEN_HOME_PARENT = "$HOME/.m2/wrapper/dists/$distributionUrlNameMain"
+if ($env:MAVEN_USER_HOME) {
+  $MAVEN_HOME_PARENT = "$env:MAVEN_USER_HOME/wrapper/dists/$distributionUrlNameMain"
+}
+$MAVEN_HOME_NAME = ([System.Security.Cryptography.MD5]::Create().ComputeHash([byte[]][char[]]$distributionUrl) | ForEach-Object {$_.ToString("x2")}) -join ''
+$MAVEN_HOME = "$MAVEN_HOME_PARENT/$MAVEN_HOME_NAME"
+
+if (Test-Path -Path "$MAVEN_HOME" -PathType Container) {
+  Write-Verbose "found existing MAVEN_HOME at $MAVEN_HOME"
+  Write-Output "MVN_CMD=$MAVEN_HOME/bin/$MVN_CMD"
+  exit $?
+}
+
+if (! $distributionUrlNameMain -or ($distributionUrlName -eq $distributionUrlNameMain)) {
+  Write-Error "distributionUrl is not valid, must end with *-bin.zip, but found $distributionUrl"
+}
+
+# prepare tmp dir
+$TMP_DOWNLOAD_DIR_HOLDER = New-TemporaryFile
+$TMP_DOWNLOAD_DIR = New-Item -Itemtype Directory -Path "$TMP_DOWNLOAD_DIR_HOLDER.dir"
+$TMP_DOWNLOAD_DIR_HOLDER.Delete() | Out-Null
+trap {
+  if ($TMP_DOWNLOAD_DIR.Exists) {
+    try { Remove-Item $TMP_DOWNLOAD_DIR -Recurse -Force | Out-Null }
+    catch { Write-Warning "Cannot remove $TMP_DOWNLOAD_DIR" }
+  }
+}
+
+New-Item -Itemtype Directory -Path "$MAVEN_HOME_PARENT" -Force | Out-Null
+
+# Download and Install Apache Maven
+Write-Verbose "Couldn't find MAVEN_HOME, downloading and installing it ..."
+Write-Verbose "Downloading from: $distributionUrl"
+Write-Verbose "Downloading to: $TMP_DOWNLOAD_DIR/$distributionUrlName"
+
+$webclient = New-Object System.Net.WebClient
+if ($env:MVNW_USERNAME -and $env:MVNW_PASSWORD) {
+  $webclient.Credentials = New-Object System.Net.NetworkCredential($env:MVNW_USERNAME, $env:MVNW_PASSWORD)
+}
+[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
+$webclient.DownloadFile($distributionUrl, "$TMP_DOWNLOAD_DIR/$distributionUrlName") | Out-Null
+
+# If specified, validate the SHA-256 sum of the Maven distribution zip file
+$distributionSha256Sum = (Get-Content -Raw "$scriptDir/.mvn/wrapper/maven-wrapper.properties" | ConvertFrom-StringData).distributionSha256Sum
+if ($distributionSha256Sum) {
+  if ($USE_MVND) {
+    Write-Error "Checksum validation is not supported for maven-mvnd. `nPlease disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties."
+  }
+  Import-Module $PSHOME\Modules\Microsoft.PowerShell.Utility -Function Get-FileHash
+  if ((Get-FileHash "$TMP_DOWNLOAD_DIR/$distributionUrlName" -Algorithm SHA256).Hash.ToLower() -ne $distributionSha256Sum) {
+    Write-Error "Error: Failed to validate Maven distribution SHA-256, your Maven distribution might be compromised. If you updated your Maven version, you need to update the specified distributionSha256Sum property."
+  }
+}
+
+# unzip and move
+Expand-Archive "$TMP_DOWNLOAD_DIR/$distributionUrlName" -DestinationPath "$TMP_DOWNLOAD_DIR" | Out-Null
+Rename-Item -Path "$TMP_DOWNLOAD_DIR/$distributionUrlNameMain" -NewName $MAVEN_HOME_NAME | Out-Null
+try {
+  Move-Item -Path "$TMP_DOWNLOAD_DIR/$MAVEN_HOME_NAME" -Destination $MAVEN_HOME_PARENT | Out-Null
+} catch {
+  if (! (Test-Path -Path "$MAVEN_HOME" -PathType Container)) {
+    Write-Error "fail to move MAVEN_HOME"
+  }
+} finally {
+  try { Remove-Item $TMP_DOWNLOAD_DIR -Recurse -Force | Out-Null }
+  catch { Write-Warning "Cannot remove $TMP_DOWNLOAD_DIR" }
+}
+
+Write-Output "MVN_CMD=$MAVEN_HOME/bin/$MVN_CMD"
